# -*- coding: utf-8 -*-
"""LVADSUSR161_KRITHIKSRI_final_anomaly.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1lkPa1OxFfDsynu8T8aMhcmueHtMnZHpT
"""

from sklearn.ensemble import IsolationForest
from sklearn.cluster import KMeans
from sklearn.metrics import r2_score,mean_squared_error
from sklearn.preprocessing import MinMaxScaler,LabelEncoder
from sklearn.model_selection import train_test_split

import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt

#load the data
df=pd.read_csv('anomaly_train.csv')

df.info()

df.describe()

#check missing value
df.isnull().sum()

df.duplicated().sum()

#label encoding
l=LabelEncoder()
df['Type']=l.fit_transform(df['Type'])
df['Location']=l.fit_transform(df['Location'])

df.info()

df.shape

#split the data
df_train=df.iloc[:600,:]
df_test=df.iloc[600:,:]

df_train.info()

#model training
model=IsolationForest(contamination=0.2,n_estimators=100)

model.fit(df_train)

y_pred=model.predict(df_train)

print(y_pred)

df_train['anomaly_score']=model.decision_function(df_train)

anomaly=df_train[df_train['anomaly_score']<0]

df1=df_train.iloc[:,:6]

df1.head()

df2=df_train['anomaly_score']
df2.head()

#for better understand data use scatter plot
for i in df1.columns:
  plt.scatter(df1[i],df2)
  plt.show()

plt.scatter(df_train['User'],df_train['anomaly_score'],color='green')
plt.scatter(anomaly['User'],anomaly['anomaly_score'],color='red')
plt.xlabel("user")
plt.ylabel("anomaly_score")
plt.title("user vs anomalyscore")
plt.show()

plt.scatter(df_train['Time'],df_train['anomaly_score'],color='green')
plt.scatter(anomaly['Time'],anomaly['anomaly_score'],color='red')
plt.xlabel("Time")
plt.ylabel("anomaly_score")
plt.title("time vs anomalyscore")
plt.show()