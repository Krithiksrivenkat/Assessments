# -*- coding: utf-8 -*-
"""lvadsusr161_krithiksri_final_clustering.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1gs3zP13ZH_9UsVu4quS2OHhhA7XI5Lir
"""

from sklearn.cluster import KMeans
from sklearn.metrics import silhouette_score
from sklearn.preprocessing import MinMaxScaler,LabelEncoder
from sklearn.model_selection import train_test_split

import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt

df=pd.read_csv("/content/customer_segmentation.csv")

df.head()

df.shape

df.info()

df.describe(include='all').T

df.isnull().sum()

df['Income'].fillna(df['Income'].mean(),inplace=True)

df.isnull().sum()

df.duplicated().sum()

for columns in df.select_dtypes(include=['float64','int64']).columns:
  sns.boxplot(x=df[columns])
  plt.show()

for i in df.select_dtypes(include=['float64','int64']).columns:
  q1=df[i].quantile(0.25)
  q3=df[i].quantile(0.75)
  iqr=q3-q1
  lower=q1-1.5*iqr
  upper=q3+1.5*iqr
  df[i]=df[i].clip(lower=lower,upper=upper)
  sns.boxplot(x=df[i])
  plt.show()

numerical=df.select_dtypes(include=['float64','int64']).columns
c=df[numerical].corr()
plt.figure(figsize=(15,20))
sns.heatmap(c,annot=True)

len(df)

df.head(3).T

df.columns

df['NumWebVisitsMonth'].value_counts()

s=MinMaxScaler()
df['NumWebVisitsMonth']=s.fit_transform(df[['NumWebVisitsMonth']])

l=LabelEncoder()

sns.scatterplot(data=df,x=df['Income'],y=df['NumWebVisitsMonth'])

sse=[]
k_r=range(1,11)
for i in k_r:
  k=KMeans(n_clusters=i)
  k.fit_predict(df[['Income','NumWebVisitsMonth']])
  sse.append(k.inertia_)
plt.plot(k_r,sse)
plt.show()

k=KMeans(n_clusters=4)
y_pred=k.fit_predict(df[['Income','NumWebVisitsMonth']])
print(y_pred)

silhouette_score(df[['Income','NumWebVisitsMonth']],y_pred)

df['cluster']=y_pred
df1=df[df.cluster==0]
df2=df[df.cluster==1]
df3=df[df.cluster==2]
df4=df[df.cluster==3]
print(k.cluster_centers_)
plt.scatter(df1.Income,df1['NumWebVisitsMonth'],color='green')
plt.scatter(df2.Income,df2['NumWebVisitsMonth'],color='red')
plt.scatter(df3.Income,df3['NumWebVisitsMonth'],color='blue')
plt.scatter(df4.Income,df4['NumWebVisitsMonth'],color='purple')
plt.scatter(k.cluster_centers_[:,0],k.cluster_centers_[:,1],label='centroid',color='black',marker='*')
plt.legend()
plt.show()

k=KMeans(n_clusters=4)
y_pred=k.fit_predict(df[['Income','ID']])
print(y_pred)

df['cluster']=y_pred
df1=df[df.cluster==0]
df2=df[df.cluster==1]
df3=df[df.cluster==2]
df4=df[df.cluster==3]
print(k.cluster_centers_)
plt.scatter(df1.Income,df1['ID'],color='green')
plt.scatter(df2.Income,df2['ID'],color='red')
plt.scatter(df3.Income,df3['ID'],color='blue')
plt.scatter(df4.Income,df4['ID'],color='purple')
plt.scatter(k.cluster_centers_[:,0],k.cluster_centers_[:,1],label='centroid',color='black',marker='*')
plt.legend()
plt.show()