# -*- coding: utf-8 -*-
"""LVADSUSR161_FINAL_krithik.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1-RhkvIk4S9vQAzy_qQXtDst9hxZbyZ9Y
"""

from sklearn.linear_model import LinearRegression
from sklearn.cluster import KMeans
from sklearn.metrics import r2_score,mean_squared_error
from sklearn.preprocessing import MinMaxScaler,LabelEncoder
from sklearn.model_selection import train_test_split

import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt

df=pd.read_csv("Fare prediction.csv")

df.head(3)

df.isnull().sum()

df.duplicated().sum()

df.info()

df.describe(include='all').T

df.shape

#outlier detection
for columns in df.select_dtypes(include=['float64','int64']).columns:
  sns.boxplot(x=df[columns])
  plt.show()

df.columns

for i in ['passenger_count','fare_amount']:
  q1=df[i].quantile(0.25)
  q3=df[i].quantile(0.75)
  iqr=q3-q1
  lower=q1-1.5*iqr
  upper=q3+1.5*iqr
  df[i]=df[i].clip(lower=lower,upper=upper)

for columns in df.select_dtypes(include=['float64','int64']).columns:
  sns.boxplot(x=df[columns])
  plt.show()

from sklearn.preprocessing import LabelEncoder
l=LabelEncoder()
for i in df.select_dtypes(include=['object']).columns:
  df[i]=l.fit_transform(df[i])

numerical=df.select_dtypes(include=['float64','int64']).columns
corre=df[numerical].corr()
print(corre)
sns.heatmap(corre,annot=True,cmap='coolwarm')
plt.show

model=LinearRegression()

df.columns

l=LabelEncoder()
for i in df.select_dtypes(include=['object']).columns:
  df[i]=l.fit_transform(df[i])

x=df.drop(columns=['fare_amount'])
y=df['fare_amount']

x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.3,random_state=42)

scale=MinMaxScaler()
x_scl=scale.fit_transform(x_train)
x_t=scale.transform(x_test)

model.fit(x_scl,y_train)

y_pred=model.predict(x_t)

print("r2_score\n",r2_score(y_test,y_pred))
print("mean_squared_error\n",mean_squared_error(y_test,y_pred))
print("RMSE\n",mean_squared_error(y_test,y_pred,squared=False))